import java.util.Scanner;

public class Matrix {

    public static void main(String[] args) {

        /* TODO */

        Scanner sc = new Scanner(System.in);
        int rows = sc.nextInt();
        int columns = sc.nextInt();
        int value = sc.nextInt();
        int matrix[][] = inputMatrix(rows, columns, sc);
        printMatrix(matrix);
        printLowerTriangularMatrix(matrix);
        findInLowerTriangularMatrix(matrix, value);

    }

    public static void inputMatrix(int[][] matrix, Scanner keyboard) {
        /* TODO */
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                matrix[i][j] = keyboard.nextInt();
            }
        }
    }

    public static int[][] inputMatrix(int rows, int columns, Scanner keyboard) {
        /* TODO */
        int arr[][] = new int[rows][columns];
        inputMatrix(arr, keyboard);
        return arr;
    }

    public static void printMatrix(int[][] matrix) {
        /* TODO */
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
    }

    public static void printLowerTriangularMatrix(int[][] matrix) {
        /* TODO */
        int arr[][] = new int[matrix.length][matrix[0].length];
        for (int i = 0; i < matrix[0].length; i++) {
            for (int j = 0; j < 1 + i; j++) {
                arr[i][j] = matrix[i][j];
            }
        }
        printMatrix(arr);
    }

    public static void findInLowerTriangularMatrix(int[][] matrix, int value) {
        /* TODO */
        int a = 0;
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                if (matrix[i][j] == value) {
                    a = 1;
                    break;
                }
            }
        }
        if (a == 1) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }
}
